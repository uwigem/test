// Created by libAntimony v2.9.4
model *combined()

  // Compartments and Species:
  species p_c, $A_g1, A_m1, $A_g2, A_m2, A_p2, $A_g3, A_m3, A_p_output, $B_g1;
  species B_m1, B_p_input, $B_g2, B_m2, B_p2, $B_g3, B_m3;

  // Assignment Rules:
  A_v1 := p_c^A_h1/(A_K1^A_h1 + p_c^A_h1);
  A_v2 := (A_Vm2*A_p2^A_h2/(A_K2^A_h2 + A_p2^A_h2))*(A_Vm3*p_c^A_h3/(A_K3^A_h3 + p_c^A_h3));
  B_v1 := B_p_input^B_h1/(B_K1^B_h1 + B_p_input^B_h1);
  B_v2 := (B_Vm2*B_p2^B_h2/(B_K2^B_h2 + B_p2^B_h2))*(B_Vm3*B_p_input^B_h3/(B_K3^B_h3 + B_p_input^B_h3));

  // Reactions:
  A_trnsc_m1: $A_g1 => A_m1; A_a_m1*A_g1 + A_L1;
  A_deg_m1: A_m1 => ; A_d_m1*A_m1;
  A_input: A_m1 => A_m1 + p_c; A_a_p_input*A_m1;
  A_deg_p_input: p_c => ; A_d_p_input*p_c;
  A_trnsc_m2: $A_g2 + p_c => p_c + A_m2; A_v1*A_g2 + A_L2;
  A_deg_m2: A_m2 => ; A_d_m2*A_m2;
  A_trnsl_p2: A_m2 => A_m2 + A_p2; A_a_p2*A_m2;
  A_deg_p2: A_p2 => ; A_d_p2*A_p2;
  A_trnsc_m3: $A_g3 + A_p2 + p_c => A_p2 + p_c + A_m3; A_v2*A_g3 + A_L3;
  A_deg_m3: A_m3 => ; A_d_m3*A_m3;
  A_trnsl_p_output: A_m3 => A_m3 + A_p_output; A_a_p_output*A_m3;
  A_output: A_p_output => ; A_d_p_output*A_p_output;
  B_trnsc_m1: $B_g1 => B_m1; B_a_m1*B_g1 + B_L1;
  B_deg_m1: B_m1 => ; B_d_m1*B_m1;
  B_input: B_m1 => B_m1 + B_p_input; B_a_p_input*B_m1;
  B_deg_p_input: B_p_input => ; B_d_p_input*B_p_input;
  B_trnsc_m2: $B_g2 + B_p_input => B_p_input + B_m2; B_v1*B_g2 + B_L2;
  B_deg_m2: B_m2 => ; B_d_m2*B_m2;
  B_trnsl_p2: B_m2 => B_m2 + B_p2; B_a_p2*B_m2;
  B_deg_p2: B_p2 => ; B_d_p2*B_p2;
  B_trnsc_m3: $B_g3 + B_p2 + B_p_input => B_p2 + B_p_input + B_m3; B_v2*B_g3 + B_L3;
  B_deg_m3: B_m3 => ; B_d_m3*B_m3;
  B_trnsl_p_output: B_m3 => B_m3 + p_c; B_a_p_output*B_m3;
  B_output: p_c => ; B_d_p_output*p_c;

  // Species initializations:
  p_c = 0;
  A_g1 = 1;
  A_m1 = 0;
  A_g2 = 1;
  A_m2 = 0;
  A_p2 = 0;
  A_g3 = 1;
  A_m3 = 0;
  A_p_output = 0;
  B_g1 = 1;
  B_m1 = 0;
  B_p_input = 0;
  B_g2 = 1;
  B_m2 = 0;
  B_p2 = 0;
  B_g3 = 1;
  B_m3 = 0;

  // Variable initializations:
  A_h1 = 2;
  A_K1 = 0.2;
  A_Vm2 = 20;
  A_h2 = 2;
  A_K2 = 0.2;
  A_Vm3 = 20;
  A_h3 = 2;
  A_K3 = 0.2;
  B_h1 = 2;
  B_K1 = 0.2;
  B_Vm2 = 20;
  B_h2 = 2;
  B_K2 = 0.2;
  B_Vm3 = 20;
  B_h3 = 2;
  B_K3 = 0.2;
  A_a_m1 = 20;
  A_L1 = 0.1;
  A_d_m1 = 0.6;
  A_a_p_input = 1;
  A_d_p_input = 0.09;
  A_L2 = 0.1;
  A_d_m2 = 0.6;
  A_a_p2 = 1;
  A_d_p2 = 0.09;
  A_L3 = 0.1;
  A_d_m3 = 0.6;
  A_a_p_output = 1;
  A_d_p_output = 0.09;
  B_a_m1 = 20;
  B_L1 = 0.1;
  B_d_m1 = 0.6;
  B_a_p_input = 1;
  B_d_p_input = 0.09;
  B_L2 = 0.1;
  B_d_m2 = 0.6;
  B_a_p2 = 1;
  B_d_p2 = 0.09;
  B_L3 = 0.1;
  B_d_m3 = 0.6;
  B_a_p_output = 1;
  B_d_p_output = 0.09;
  A_a_m2 = 20;
  A_a_m3 = 20;
  A_Vm1 = 20;
  B_a_m2 = 20;
  B_a_m3 = 20;
  B_Vm1 = 20;

  // Other declarations:
  var A_v1, A_v2, B_v1, B_v2;
  const A_h1, A_K1, A_Vm2, A_h2, A_K2, A_Vm3, A_h3, A_K3, B_h1, B_K1, B_Vm2;
  const B_h2, B_K2, B_Vm3, B_h3, B_K3, A_a_m1, A_L1, A_d_m1, A_a_p_input;
  const A_d_p_input, A_L2, A_d_m2, A_a_p2, A_d_p2, A_L3, A_d_m3, A_a_p_output;
  const A_d_p_output, B_a_m1, B_L1, B_d_m1, B_a_p_input, B_d_p_input, B_L2;
  const B_d_m2, B_a_p2, B_d_p2, B_L3, B_d_m3, B_a_p_output, B_d_p_output;
  const A_a_m2, A_a_m3, A_Vm1, B_a_m2, B_a_m3, B_Vm1;
end
